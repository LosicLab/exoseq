/*
MSSM Minerva *intercactive node* config file for nfcore/ExoSeq pipeline
Contains paths (Losic-Group Specific) for meta files, genomes and
configurations for executors i.e. LSF

FOR RUNNING ON INTERACTIVE NODE!!
*/


process.conda = '/sc/orga/projects/losicb01a/common_folder/nextflow-pipelines/conda_envs/losiclab-exoseq'
env.PICARD = '/sc/orga/projects/losicb01a/common_folder/nextflow-pipelines/conda_envs/losiclab-exoseq/share/picard-2.20.2-0/picard.jar'
env.GATK = '/sc/orga/projects/losicb01a/common_folder/nextflow-pipelines/conda_envs/losiclab-exoseq/share/gatk4-4.0.7.0-0/gatk-package-4.0.7.0-local.jar'


process {
    executor = 'local'

    // step-specific resource allocations
    $fastqc {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 3.h * task.attempt }
    }

    $trim_galore {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $bwamem {
        cpus = { 16 * task.attempt }
        memory = { 32.GB * task.attempt }
        time = { 10.h * task.attempt }
    }

    $mergeBamFiles {
        cpus = { 4 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $editBamHeaders {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 3.h * task.attempt }
    }

    $markDuplicates {
        cpus = { 8 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $recalibrateBam {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $applyBQSR {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }
    
    $collectMultiMetrics {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 3.h * task.attempt }
    }

    $callSNPs {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 10.h * task.attempt }
    }

    $callSomaticVariants {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 10.h * task.attempt }
    }

    $filterMutectCalls {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 10.h * task.attempt }
    }
  
    
}
