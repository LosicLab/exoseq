
params {

// Variables and defaults
name = false
help = false

bam = false
reads = false

genome = 'GRCh38'
multiLane = false
exome = true
singleEnd = false
outdir = "./results"

run_id = false
saveReference = true
kitfiles = 'agilent_v5'
aligner = "bwa-mem"
refDir="/sc/orga/projects/losicb01a/common_folder/reference/"


// Clipping options
notrim = false
saveTrimmed = false
clip_r1 = 0
clip_r2 = 0
three_prime_clip_r1 = 0
three_prime_clip_r2 = 0


// Reference Genome & Annotations
gfasta = params.refs[ params.genome ] ? params.refs[ params.genome ].gfasta ?: false : false
bwa_index = params.refs[ params.genome ] ? params.refs[ params.genome ].bwa_index ?: false : false
dbsnp = params.refs[ params.genome ] ? params.refs[ params.genome ].dbsnp ?: false : false
thousandg = params.refs[ params.genome ] ? params.refs[ params.genome ].thousandg ?: false : false
mills = params.refs[ params.genome ] ? params.refs[ params.genome ].mills ?: false : false
omni = params.refs[ params.genome ] ? params.refs[ params.genome ].omni ?: false : false
hapmap = params.refs[ params.genome ] ? params.refs[ params.genome ].hapmap ?: false : false
snpeff = params.refs[ params.genome ] ? params.refs[ params.genome ].snpeff ?: false : false
vep_cache = params.refs[ params.genome ] ? params.refs[ params.genome ].vep_cache ?: false : false
vep_fasta = params.refs[ params.genome ] ? params.refs[ params.genome ].vep_fasta ?: false : false
bed12 = params.refs[ params.genome ] ? params.refs[ params.genome ].bed12 ?: false : false

bait = params.refs[ params.genome ] ? params.refs[ params.genome ].bait ?: false : false
target = params.refs[ params.genome ] ? params.refs[ params.genome ].target ?: false : false
target_bed = params.refs[ params.genome ] ? params.refs[ params.genome ].target_bed ?: false : false
split_intervals = params.refs[ params.genome ] ? params.refs[ params.genome ].split_intervals ?: false : false
}

process {

errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
maxRetries = 5
maxErrors = '-1'

cpus = {1 * task.attempt}
memory = { 4.GB * task.attempt }
time = { 2.h * task.attempt }
}

