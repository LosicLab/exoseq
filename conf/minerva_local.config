/*
MSSM Minerva *intercactive node* config file for nfcore/ExoSeq pipeline
Contains paths (Losic-Group Specific) for meta files, genomes and
configurations for executors i.e. LSF

FOR RUNNING ON INTERACTIVE NODE!!
*/


process {
    executor = 'local'
    module = ['picard/2.7.1', 'trim_galore/0.4.5', 'R', 'fastqc', 'samtools', 'bwa/0.7.15', 'gatk/4.0.1.2']


    // step-specific resource allocations
    $fastqc {
        cpus = { 2 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 3.h * task.attempt }
    }

    $trim_galore {
        cpus = { 2 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $bwamem {
        cpus = { 32 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = { 10.h * task.attempt }
    }

    $mergeBamFiles {
        cpus = { 4 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $editBamHeaders {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 3.h * task.attempt }
    }

    $markDuplicates {
        cpus = { 8 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $recalibrateBam {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }

    $applyBQSR {
        cpus = { 1 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = { 5.h * task.attempt }
    }
    
    $collectMultiMetrics {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 3.h * task.attempt }
    }

    $callSNPs {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 10.h * task.attempt }
    }

    $callSomaticVariants {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 10.h * task.attempt }
    }

    $filterMutectCalls {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        time = { 10.h * task.attempt }
    }
  
    
}


env.PICARD= '$PICARD'
